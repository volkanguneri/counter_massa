### expected features:

1. **Increment Counter**
    - Create a function that increments the counter by a specified number `n` passed as an argument using `Args` object.
    - Emit an event when counter is incremented
    - This function is meant to be called from frontend
2. **Read Counter Value**
    - Create a function that reads the current value of the counter.
3. **Reset counter**
    - Reset the counter value to 0. This function is meant to be called from the backend

### bonus task:

- write unit tests





Questions: 
1. console.log()



// // Store.set(COUNT_KEY, u8ToBytes(count))
// // count = Store.get(COUNT_KEY) + increment
// // const COUNT_KEY = stringToBytes('count');

// // :::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::

// // export const TOTAL_SUPPLY_KEY = stringToBytes('TOTAL_SUPPLY');
// // ...
// // const totalSupply = args
// //     .nextU256()
// //     .expect('Error while initializing totalSupply');
// // Storage.set(TOTAL_SUPPLY_KEY, u256ToBytes(totalSupply));
// // ...
// // export function totalSupply(_: StaticArray<u8>): StaticArray<u8> {
// //   return Storage.get(TOTAL_SUPPLY_KEY);
// // }



// // let countU8: u8 = u8(i8.parse(countStr));


AS12niiD27mLinQfvQx5dKXm1YjXKkbeiFUVg4g9eHnpPrx4FDbRT